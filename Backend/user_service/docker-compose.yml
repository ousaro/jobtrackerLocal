version: '3.8'

services:
  mongo:
    image: mongo:6
    container_name: mongo-user
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: oumeri
      MONGO_INITDB_ROOT_PASSWORD: PantryScanner2024
    volumes:
      - mongo_data:/data/db
    networks:
      - jbt-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081" 
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: oumeri
      ME_CONFIG_MONGODB_ADMINPASSWORD: PantryScanner2024 
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo
    networks:
      - jbt-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - jbt-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  user-service:
    build: .
    ports:
      - "5001:5001"
    environment:
      # Use the service name as the hostname not the container name
      MONGO_URI: mongodb://oumeri:PantryScanner2024@mongo:27017/User-Service?authSource=admin
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672 # Use the service name as the hostname not localhost in the container
      USER_QUEUE: user.index
      PORT: 5001
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - jbt-network
  
networks:
  jbt-network:
    external: true

volumes:
  mongo_data:
    driver: local
